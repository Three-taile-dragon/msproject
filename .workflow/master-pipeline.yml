version: '1.0'
name: master-pipeline
displayName: MasterPipeline
triggers:
  trigger: auto
  push:
    branches:
      include:
        - master
stages:
  - name: compile
    displayName: 编译
    strategy: naturally
    trigger: auto
    steps:
      - step: build@golang
        name: build_api
        displayName: Api 构建
        golangVersion: '1.19'
        commands:
          - mkdir output
          - GOOS=linux GOARCH=amd64 go build -o output/project_api.amd64 project_api/main.go
          - GOOS=linux GOARCH=386 go build -o output/project_api.linux32 project_api/main.go
          - GOOS=windows GOARCH=amd64 go build -o output/project_api.win64.exe project_api/main.go
          - GOOS=windows GOARCH=386 go build -o output/project_api32.exe project_api/main.go
          - GOOS=darwin GOARCH=amd64 go build -o output/project_api.darwin project_api/main.go
          - chmod +X output/project_api.amd64
          - ./output/project_api.amd64
          - ''
        artifacts:
          - name: BUILD_ARTIFACT_API
            path:
              - ./output
        caches:
          - /go/pkg/mod
        strategy: {}
      - step: build@golang
        name: build_golang_project
        displayName: Project 构建
        golangVersion: '1.19'
        commands:
          - mkdir output
          - GOOS=linux GOARCH=amd64 go build -o output/project_project.amd64 project_project/main.go
          - GOOS=linux GOARCH=386 go build -o output/project_project.linux32 project_project/main.go
          - GOOS=windows GOARCH=amd64 go build -o output/project_project.win64.exe project_project/main.go
          - GOOS=windows GOARCH=386 go build -o output/project_project32.exe project_project/main.go
          - GOOS=darwin GOARCH=amd64 go build -o output/project_project.darwin project_project/main.go
          - chmod +X output/project_project.amd64
          - ./output/project_project.amd64
        artifacts:
          - name: BUILD_ARTIFACT_PROJECT
            path:
              - ./output
        caches:
          - /go/pkg/mod
        notify: []
        strategy:
          retry: '0'
      - step: build@golang
        name: build_golang_user
        displayName: User 构建
        golangVersion: '1.19'
        commands:
          - mkdir output
          - GOOS=linux GOARCH=amd64 go build -o output/project_user.amd64 project_user/main.go
          - GOOS=linux GOARCH=386 go build -o output/project_user.linux32 project_user/main.go
          - GOOS=windows GOARCH=amd64 go build -o output/project_user.win64.exe project_user/main.go
          - GOOS=windows GOARCH=386 go build -o output/project_user32.exe project_user/main.go
          - GOOS=darwin GOARCH=amd64 go build -o output/project_user.darwin project_user/main.go
          - chmod +X output/project_user.amd64
          - ./output/project_user.amd64
          - ''
        artifacts:
          - name: BUILD_ARTIFACT_USER
            path:
              - ./output
        caches:
          - /go/pkg/mod
        notify: []
        strategy:
          retry: '0'
  - name: stage-30aed122
    displayName: 上传编译文件
    strategy: naturally
    trigger: auto
    executor: []
    steps:
      - step: publish@general_artifacts
        name: publish_general_artifacts_api
        displayName: 上传制品_API
        dependArtifact: BUILD_ARTIFACT_API
        artifactName: output_api
        notify: []
        strategy:
          retry: '0'
      - step: publish@general_artifacts
        name: publish_general_artifacts_project
        displayName: 上传制品_PROJECT
        dependArtifact: BUILD_ARTIFACT_PROJECT
        artifactName: output_project
        notify: []
        strategy:
          retry: '0'
      - step: publish@general_artifacts
        name: publish_general_artifacts_user
        displayName: 上传制品_USER
        dependArtifact: BUILD_ARTIFACT_USER
        artifactName: output_user
        notify: []
        strategy:
          retry: '0'
  - name: release
    displayName: 发布
    strategy: naturally
    trigger: auto
    steps:
      - step: publish@release_artifacts
        name: publish_release_artifacts_api
        displayName: 发布_API
        dependArtifact: output_api
        version: 1.0.0.0
        autoIncrement: true
        strategy: {}
      - step: publish@release_artifacts
        name: publish_release_artifacts_project
        displayName: 发布_PROJECT
        dependArtifact: output_project
        version: 1.0.0.0
        autoIncrement: true
        notify: []
        strategy:
          retry: '0'
      - step: publish@release_artifacts
        name: publish_release_artifacts_user
        displayName: 发布_USER
        dependArtifact: output_user
        version: 1.0.0.0
        autoIncrement: true
        notify: []
        strategy:
          retry: '0'
strategy:
  blocking: true
